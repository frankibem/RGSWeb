<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RGSWeb</name>
    </assembly>
    <members>
        <member name="M:RGSWeb.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,RGSWeb.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:RGSWeb.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:RGSWeb.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,RGSWeb.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,RGSWeb.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(RGSWeb.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:RGSWeb.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},RGSWeb.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:RGSWeb.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:RGSWeb.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(RGSWeb.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:RGSWeb.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,RGSWeb.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:RGSWeb.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:RGSWeb.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RGSWeb.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:RGSWeb.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:RGSWeb.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RGSWeb.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:RGSWeb.Controllers.AccountController.Register(RGSWeb.Models.RegisterBindingModel)">
            <summary>
            Registers a new user
            </summary>
        </member>
        <member name="T:RGSWeb.Controllers.API.AnnouncementsController">
            <summary>
            API controller for announcement related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.AnnouncementsController.#ctor">
            <summary>
            Create a new default AnnouncementsController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.AnnouncementsController.GetClassAnnouncements(System.Int32)">
            <summary>
            Returns all announcements made in a class
            </summary>
            <param name="classId">Id of the class</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Controllers.API.AnnouncementsController.PutAnnouncement(RGSWeb.Models.UpdateAnnouncementModel)">
            <summary>
            Update an announcement
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.AnnouncementsController.PostAnnouncement(RGSWeb.Models.CreateAnnouncementModel)">
            <summary>
            Create a new announcement
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.AnnouncementsController.DeleteWorkItem(System.Int32)">
            <summary>
            Delete an announcment by id
            </summary>
            <param name="id">Id of the announcement to delete</param>
        </member>
        <member name="T:RGSWeb.Controllers.API.EnrollmentsController">
            <summary>
            API controller for enrollment related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.EnrollmentsController.#ctor">
            <summary>
            Create a new default EnrollmentsController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.EnrollmentsController.GetEnrollments(System.Int32,System.Nullable{RGSWeb.Models.EnrollmentState})">
            <summary>
            Return a list of enrollments in a class
            </summary>
            <param name="classId">Id of the class</param>
            <param name="state">The state of the students to obtain e.g. All, PendingOnly, AcceptedOnly</param>
        </member>
        <member name="M:RGSWeb.Controllers.API.EnrollmentsController.RequestEnrollment(RGSWeb.Models.EnrollmentBindingModel)">
            <summary>
            Request student enrollment into a class
            </summary>
            <param name="enroll">Contains the student Id and class Id</param>
        </member>
        <member name="M:RGSWeb.Controllers.API.EnrollmentsController.AcceptStudentEnrollment(RGSWeb.Models.EnrollmentBindingModel)">
            <summary>
            Accept/Reject a student's enrollment into a class
            </summary>
            <param name="enroll">Model containing the details of the enrollment</param>
        </member>
        <member name="M:RGSWeb.Controllers.API.EnrollmentsController.DropStudent(RGSWeb.Models.EnrollmentBindingModel)">
            <summary>
            Drops a student from a class
            </summary>
        </member>
        <member name="T:RGSWeb.Controllers.API.GradesController">
            <summary>
            API controller for grade related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.GradesController.#ctor">
            <summary>
            Creates a new default GradesController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.API.GradesController.GetGradesForClass(System.Int32)">
            <summary>
            Returns the grades of all students in a class
            </summary>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Controllers.API.GradesController.GetStudentsGrade(System.String,System.Int32)">
            <summary>
            Returns a students grade in a class
            </summary>
            <param name="classId"></param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Controllers.ClassesController">
            <summary>
            API controller for class related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.#ctor">
            <summary>
            Creates a new default ClassesController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.GetClasses(System.String)">
            <summary>
            If userId is the id of a student, returns a list of all classes that student is enrolled in.
            If it is that of a teacher, returns a list of all classes taught by the teacher
            </summary>
            <param name="userName">Id of teacher/student</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.GetClass(System.Int32)">
            <summary>
            Returns the class with the specified id
            </summary>
            <param name="id">Id of the class to return</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.PostClass(RGSWeb.Models.CreateClassBindingModel)">
            <summary>
            Creates a new class
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.PutClass(RGSWeb.Models.UpdateClassBindingModel)">
            <summary>
            Updates the details of a class
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ClassesController.DeleteClass(System.Int32)">
            <summary>
            Deletes a class
            </summary>
            <param name="id">Id of the class to delete</param>
        </member>
        <member name="T:RGSWeb.Controllers.ScoreUnitsController">
            <summary>
            API Controller for ScoreUnit related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ScoreUnitsController.#ctor">
            <summary>
            Creates a new default ScoreUnitsController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.ScoreUnitsController.GetScoreUnits(System.Int32)">
            <summary>
            Returns all score units associated with a work item
            </summary>
            <param name="workItemId">Id of the score unit to get</param>
        </member>
        <member name="M:RGSWeb.Controllers.ScoreUnitsController.PutScoreUnits(System.Collections.Generic.List{RGSWeb.Models.ScoreUnitBindingModel})">
            <summary>
            Add or update grade(s)
            </summary>
        </member>
        <member name="T:RGSWeb.Controllers.WorkItemsController">
            <summary>
            API controller for WorkItem related actions
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.WorkItemsController.#ctor">
            <summary>
            Create a new default WorkItemsController
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.WorkItemsController.GetClassWorkItems(System.Int32)">
            <summary>
            Returns all work items associated with a class
            </summary>
            <param name="classId">Id of the class</param>
        </member>
        <member name="M:RGSWeb.Controllers.WorkItemsController.PutWorkItem(RGSWeb.ViewModels.UpdateWorkItemViewModel)">
            <summary>
            Update a WorkItem
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.WorkItemsController.PostWorkItem(RGSWeb.ViewModels.CreateWorkItemViewModel)">
            <summary>
            Create a new WorkItem
            </summary>
        </member>
        <member name="M:RGSWeb.Controllers.WorkItemsController.DeleteWorkItem(System.Int32)">
            <summary>
            Delete a WorkItem and all associated data
            </summary>
            <param name="id">Id of the WorkItem to delete</param>
        </member>
        <member name="T:RGSWeb.Managers.AnnouncementManager">
            <summary>
            Manages all announcement related actions - creation, update, deletion ...
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new AnnouncementManager with the given database context
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.CreateAnnouncement(RGSWeb.Models.CreateAnnouncementModel)">
            <summary>
            Creates a new announcement from the given model
            </summary>
            <param name="cam"></param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.UpdateAnnouncement(RGSWeb.Models.UpdateAnnouncementModel)">
            <summary>
            Updates an announcement using details in the given model
            </summary>
            <param name="uam">Model containing details of the announcement to update</param>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.DeleteAnnouncement(System.Int32)">
            <summary>
            Deletes the announcement with the specified id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.GetAnnouncementsForClass(RGSWeb.Models.Class)">
            <summary>
            Returns a list of announcements for the given class
            </summary>
            <param name="class"></param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.AnnouncementManager.AnnouncementExists(System.Int32)">
            <summary>
            Returns true if an announcement with the given id exists. Otherwise false
            </summary>
            <param name="id">Id of the announcement to search for</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Managers.ClassManager">
            <summary>
            Manages all class related actions - creation, update, deletion...
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new ClassManager with the given Database context
            </summary>
            <param name="db">The Database context to use</param>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.#ctor(RGSWeb.Models.ApplicationDbContext,RGSWeb.ApplicationUserManager)">
            <summary>
            Creates a new ClassManager with the given Database context and UserManager
            </summary>
            <param name="db">The Database context to use</param>
            <param name="userManager">The UserManager to use</param>
            <remarks>The UserManager must have been created from db</remarks>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.GetUserClasses(RGSWeb.Models.ApplicationUser)">
            <summary>
            Returns a list of classes for the user
            </summary>
            <param name="user"></param>
            <remarks>If the user is a teacher, returns classes taught by the teacher.
            If the user is a student, returns classes enrolled in by the student
            (both pending and accepted).</remarks>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.GetClassById(System.Int32)">
            <summary>
            Returns the class with the given id.
            </summary>
            <param name="id"></param>
            <returns>Null if class is not found</returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.CreateClass(RGSWeb.Models.CreateClassBindingModel)">
            <summary>
            Creates a new class from the given binding model
            </summary>
            <param name="classBindingModel">Model containing the details of the class
            to create</param>
            <returns>Null if teacher could not be found. Otherwise, returns the 
            created class</returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.UpdateClass(RGSWeb.Models.UpdateClassBindingModel)">
            <summary>
            Updates a class using details in the given model
            </summary>
            <param name="ucbm">Model containing details of the class to update</param>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.DeleteClass(System.Int32)">
            <summary>
            Deletes the class with the specified id.
            </summary>
            <param name="id"></param>
            <returns>The class that was deleted</returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.GetAcceptedStudents(RGSWeb.Models.Class)">
            <summary>
            Returns all students who have been accepted into a class
            </summary>
            <param name="class">The class to return students for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.GetPendingStudents(RGSWeb.Models.Class)">
            <summary>
            Returns all students who have not been accepted into class (their status is
             pending)
            </summary>
            <param name="class">The class to return students for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.GetAllStudents(RGSWeb.Models.Class)">
            <summary>
            Returns all students in a class (both pending and accepted)
            </summary>
            <param name="class">The class to return students for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.ClassManager.ClassExists(System.Int32)">
            <summary>
            Returns true if a class with the given id exists. Otherwise false
            </summary>
            <param name="id">Id of the class to search for</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Managers.EnrollmentManager">
            <summary>
            Manages all enrollment related actions - request, removal and update.
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new EnrollmentManager with the given database context
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.RequestEnrollment(RGSWeb.Models.Class,RGSWeb.Models.ApplicationUser)">
            <summary>
            Enrolls a new student into the class
            </summary>
            <param name="class">Class to enroll the student in</param>
            <param name="student">Student to enroll in a class</param>
            <returns>Null if the an enrollment has already been created. Otherwise, the
            enrollment that was just created.</returns>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.DropStudent(RGSWeb.Models.Class,RGSWeb.Models.ApplicationUser)">
            <summary>
            Deletes a students enrollment in a class
            </summary>
            <param name="class">The class the student is enrolled in or has applied for enrollment</param>
            <param name="student">The student to unenroll from the class</param>
            <returns>Null if the student is not enrolled in class. Otherwise, returns the
            enrollment that was removed</returns>
            <remarks>This clears all data associated with the student in this class and
            cannot be undone</remarks>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.AcceptEnrollment(RGSWeb.Models.Enrollment,System.Boolean)">
            <summary>
            Accepts or rejects a students enrollment into a class
            </summary>
            <param name="enrollment">The enrollment to update</param>
            <param name="state">True if the student should be accepted. Otherwise false.</param>
            <remarks>Deletes the enrollment if rejected</remarks>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.GetAllEnrollmentsForClass(RGSWeb.Models.Class)">
            <summary>
            Returns all enrollments both pending and not for a class
            </summary>
            <param name="class">The class to return the enrollments for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.GetPendingEnrollmentsForClass(RGSWeb.Models.Class)">
            <summary>
            Returns all pending enrollments for the given class
            </summary>
            <param name="class">Class to return pending enrollments for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.EnrollmentManager.GetAcceptedEnrollmentsForClass(RGSWeb.Models.Class)">
            <summary>
            Returns all non-pending enrollments for the given class
            </summary>
            <param name="class">Class to return non-pending enrollments for</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Managers.GradeManager">
            <summary>
            Used to determine a students grade
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.GradeManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new GradeManager with the given Database context
            </summary>
            <param name="db">The Database context to use</param>
        </member>
        <member name="M:RGSWeb.Managers.GradeManager.GetStudentGrade(RGSWeb.Models.ApplicationUser,RGSWeb.Models.Class)">
            <summary>
            Calculates and returns a students grade in a class
            </summary>
            <param name="student">To student to calculate a grade for</param>
            <param name="class">The class that the student is enrolled in</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Managers.ScoreUnitManager">
            <summary>
            Manages all ScoreUnit related actions - creation, update, deletion...
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.ScoreUnitManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new ScoreUnitManager with the given Database context
            </summary>
            <param name="db">The Database context to use</param>
        </member>
        <member name="M:RGSWeb.Managers.ScoreUnitManager.#ctor(RGSWeb.Models.ApplicationDbContext,RGSWeb.ApplicationUserManager)">
            <summary>
            Creates a new ScoreUnitManager with the given Database context and UserManager
            </summary>
            <param name="db">The Database context to use</param>
            <param name="userManager">The UserManager to use</param>
            <remarks>The UserManager must have been created from db</remarks>
        </member>
        <member name="M:RGSWeb.Managers.ScoreUnitManager.GetScoreUnits(RGSWeb.Models.WorkItem)">
            <summary>
            Returns all the ScoreUnits associated with the given WorkItem
            </summary>
            <param name="workItem">WorkItem for which to return ScoreUnits</param>
            <returns>Creates new ScoreUnits for all students who have none</returns>
        </member>
        <member name="M:RGSWeb.Managers.ScoreUnitManager.GetStudentScoreUnit(RGSWeb.Models.WorkItem,RGSWeb.Models.ApplicationUser)">
            <summary>
            Returns a students ScoreUnit for a WorkItem
            </summary>
            <param name="workItem">WorkItem to return the ScoreUnit for</param>
            <param name="student">Student to return the ScorreUnit for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.ScoreUnitManager.UpdateScoreUnits(System.Collections.Generic.List{RGSWeb.Models.ScoreUnitBindingModel})">
            <summary>
            Updates the ScoreUnits in the database using details from the modesl in the given list
            </summary>
            <param name="subm">List of models used for the update</param>
            <exception cref="T:System.Exception">Throws an exception if one of the models could not be found</exception>
        </member>
        <member name="T:RGSWeb.Managers.WorkItemManager">
            <summary>
            Manages all Work-Item related actions - creation, update, deletion ...
            </summary>
        </member>
        <member name="P:RGSWeb.Managers.WorkItemManager.Db">
            <summary>
            The Database context to use for queries
            </summary>
        </member>
        <member name="P:RGSWeb.Managers.WorkItemManager.UserManager">
            <summary>
            The UserManager to use for queries
            </summary>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.#ctor(RGSWeb.Models.ApplicationDbContext)">
            <summary>
            Creates a new WorkItemManager with the given Database context
            </summary>
            <param name="db">The Database context to use</param>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.#ctor(RGSWeb.Models.ApplicationDbContext,RGSWeb.ApplicationUserManager)">
            <summary>
            Creates a new WorkItemManager with the given Database context and UserManager
            </summary>
            <param name="db">The Database context to use</param>
            <param name="userManager">The UserManager to use</param>
            <remarks>The UserManager must have been created from db</remarks>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.CreateWorkItem(RGSWeb.ViewModels.CreateWorkItemViewModel)">
            <summary>
            Creates a new WorkItem from the given model
            </summary>
            <param name="cwvm">Model containing the detail of the WorkItem to create</param>
            <returns>Null if the class or teacher is not found, Otherwise, returns the WorkItem created</returns>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.UpdateWorkItem(RGSWeb.ViewModels.UpdateWorkItemViewModel)">
            <summary>
            Updates a WorkItem using details in the given model
            </summary>
            <param name="uwvm">Model containing details of the WorkItem to update</param>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.GetClassWorkItems(RGSWeb.Models.Class)">
            <summary>
            Returns all WorkItems that have been assigned in a class
            </summary>
            <param name="class">Class to return WorkItems for</param>
            <returns></returns>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.GetWorkItemById(System.Int32)">
            <summary>
            Returns the WorkItem with the given id.
            </summary>
            <param name="id">Id of the WorkItem to find</param>
            <returns>Null if the WorkItem is not found</returns>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.DeleteWorkItemById(System.Int32)">
            <summary>
            Deletes the WorkItem with the given id
            </summary>
            <param name="id">Id of the WorkItem to delete</param>
            <returns>Null if the WorkItem could not be found. Otherwise,
            returns the deleted WorkItem</returns>
            <remarks>Delete all data associated with the WorkItem i.e. scoreunits</remarks>
        </member>
        <member name="M:RGSWeb.Managers.WorkItemManager.WorkItemExists(System.Int32)">
            <summary>
            Returns true if a WorkItem with the given id exists
            and false otherwise
            </summary>
            <param name="id">The id of the WorkItem to search for</param>
            <returns></returns>
        </member>
        <member name="T:RGSWeb.Models.Announcement">
            <summary>
            Class to represent a class announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Announcement.Id">
            <summary>
            Id of the announcment
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Announcement.Title">
            <summary>
            Title of the announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Announcement.Description">
            <summary>
            Description of the announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Announcement.CreatedOn">
            <summary>
            Creation time of the assignment
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Announcement.Class">
            <summary>
            Class for which the announcement was created
            </summary>
        </member>
        <member name="T:RGSWeb.Models.CreateAnnouncementModel">
            <summary>
            Model used to create an announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.CreateAnnouncementModel.Title">
            <summary>
            Title of the announcment
            </summary>
        </member>
        <member name="P:RGSWeb.Models.CreateAnnouncementModel.Description">
            <summary>
            Description of the announcement (main content)
            </summary>
        </member>
        <member name="P:RGSWeb.Models.CreateAnnouncementModel.ClassId">
            <summary>
            Id of the class for which to create the announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.CreateAnnouncementModel.CreatedOn">
            <summary>
            Creation time for the assignment
            </summary>
        </member>
        <member name="T:RGSWeb.Models.UpdateAnnouncementModel">
            <summary>
            Model used to update an announcement
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UpdateAnnouncementModel.Id">
            <summary>
            Id of the announcement to update
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UpdateAnnouncementModel.Title">
            <summary>
            Updated announcement title
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UpdateAnnouncementModel.Description">
            <summary>
            Updated announcement description
            </summary>
        </member>
        <member name="T:RGSWeb.Models.Enrollment">
            <summary>
            A class to represent student enrollment in a "class"
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Enrollment.Id">
            <summary>
            The Id of the enrollment
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Enrollment.Class">
            <summary>
            The Class for which the enrollment applies
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Enrollment.Pending">
            <summary>
            Pending is true if the student has not been accepted to a class
            and false otherwise
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Enrollment.Student">
            <summary>
            The student for which the enrollment applies
            </summary>
        </member>
        <member name="T:RGSWeb.Models.EnrollmentState">
            <summary>
            Represents the 
            </summary>
        </member>
        <member name="F:RGSWeb.Models.EnrollmentState.All">
            <summary>
            Return all enrollments pending and non-pending
            </summary>
        </member>
        <member name="F:RGSWeb.Models.EnrollmentState.Pending">
            <summary>
            Return only pending enrollments
            </summary>
        </member>
        <member name="F:RGSWeb.Models.EnrollmentState.Accepted">
            <summary>
            Return only non-pending enrollments
            </summary>
        </member>
        <member name="T:RGSWeb.Models.EnrollmentBindingModel">
            <summary>
            Model used for requesting and accepting an enrollment by a student
            </summary>
        </member>
        <member name="P:RGSWeb.Models.EnrollmentBindingModel.StudentUserName">
            <summary>
            The student's username
            </summary>
        </member>
        <member name="P:RGSWeb.Models.EnrollmentBindingModel.ClassId">
            <summary>
            Id of the class for enrollment
            </summary>
        </member>
        <member name="P:RGSWeb.Models.EnrollmentBindingModel.Accept">
            <summary>
            True if student should be accepted, false otherwise.
            </summary>
        </member>
        <member name="T:RGSWeb.Models.GradeDistribution">
            <summary>
            Class to represent the weight distribution of the different types of workitems
            </summary>
        </member>
        <member name="T:RGSWeb.Models.WorkItemType">
            <summary>
            Class to represent the different types of workitems
            </summary>
        </member>
        <member name="T:RGSWeb.Models.UserResultView">
            <summary>
            Alternative model to represent a user
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UserResultView.Email">
            <summary>
            User's email address
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UserResultView.FirstName">
            <summary>
            User's first name
            </summary>
        </member>
        <member name="P:RGSWeb.Models.UserResultView.LastName">
            <summary>
            User's last name
            </summary>
        </member>
        <member name="M:RGSWeb.Models.UserResultView.#ctor">
            <summary>
            Creates a default UserResultView
            </summary>
        </member>
        <member name="M:RGSWeb.Models.UserResultView.#ctor(RGSWeb.Models.ApplicationUser)">
            <summary>
            Create a UserResultView for the given user
            </summary>
            <param name="user">Model to create the UserResultView from</param>
        </member>
        <member name="T:RGSWeb.Models.Class">
            <summary>
             Represents a class in the raider grader system
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Class.Id">
            <summary>
            The id of the class
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Class.Title">
            <summary>
            The title of the Class
            </summary>
            <example>Advanced Biology</example>
        </member>
        <member name="P:RGSWeb.Models.Class.Prefix">
            <summary>
            The short prefix for the class
            </summary>
            <example>BIO</example>
        </member>
        <member name="P:RGSWeb.Models.Class.CourseNumber">
            <summary>
            The course number
            </summary>
            <example>3375</example>
        </member>
        <member name="P:RGSWeb.Models.Class.Section">
            <summary>
            The section of the class
            </summary>
            <example>1</example>
        </member>
        <member name="P:RGSWeb.Models.Class.GradeDistribution">
            <summary>
            The distribution of grades for this class for the different types
            of work items
            </summary>
        </member>
        <member name="P:RGSWeb.Models.Class.Teacher">
            <summary>
            The teacher who is going to teach this class
            </summary>
        </member>
        <member name="P:RGSWeb.Models.ApplicationUser.FirstName">
            <summary>
            The user's first name
            </summary>
        </member>
        <member name="P:RGSWeb.Models.ApplicationUser.LastName">
            <summary>
            The user's last name
            </summary>
        </member>
        <member name="T:RGSWeb.Models.ScoreUnitBindingModel">
            <summary>
            Alternative model for representing specific information from a ScoreUnit
            </summary>
        </member>
        <member name="P:RGSWeb.Models.ScoreUnitBindingModel.Id">
            <summary>
            Id of the score unit to update
            </summary>
            <remarks>Set to 0 if adding for the first time</remarks>
        </member>
        <member name="P:RGSWeb.Models.ScoreUnitBindingModel.StudentUserName">
            <summary>
            Username of the student
            </summary>
        </member>
        <member name="P:RGSWeb.Models.ScoreUnitBindingModel.WorkItemId">
            <summary>
            Id of the work item
            </summary>
        </member>
        <member name="P:RGSWeb.Models.ScoreUnitBindingModel.Grade">
            <summary>
            Student's grade
            </summary>
        </member>
        <member name="M:RGSWeb.Models.ScoreUnitBindingModel.#ctor">
            <summary>
            Default constructor to create a ScoreUnitBindingModel
            </summary>
        </member>
        <member name="M:RGSWeb.Models.ScoreUnitBindingModel.#ctor(RGSWeb.Models.ScoreUnit)">
            <summary>
            Creates a model from the given ScoreUnit
            </summary>
            <param name="scoreUnit">ScoreUnit to create the model from</param>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.Id">
            <summary>
            Id of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.Title">
            <summary>
            The title of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.Description">
            <summary>
            Description for the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.DueDate">
            <summary>
            Date and time at which the WorkItem is due
            </summary>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.MaxPoints">
            <summary>
            Maximum points attainable for this WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.Type">
            <summary>
            The type of the WorkItem
            </summary>
            <example>Exam</example>
        </member>
        <member name="P:RGSWeb.Models.WorkItem.Class">
            <summary>
            The Class to which the WorkItem belongs
            </summary>
        </member>
        <member name="T:RGSWeb.ViewModels.UserViewModel">
            <summary>
            Base view-model for application users
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UserViewModel.FirstName">
            <summary>
            The user's first name
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UserViewModel.LastName">
            <summary>
            The user's last name
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UserViewModel.UserName">
            <summary>
            Username for user
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.UserViewModel.#ctor">
            <summary>
            Creates a default UserViewModel
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.UserViewModel.#ctor(RGSWeb.Models.ApplicationUser)">
            <summary>
            Create a UserModel for an ApplicationUser
            </summary>
            <param name="user"></param>
        </member>
        <member name="T:RGSWeb.ViewModels.StudentViewModel">
            <summary>
            Model for representing a student
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.StudentViewModel.Grade">
            <summary>
            The student's grade for the class
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.StudentViewModel.#ctor">
            <summary>
            Creates a default StudentViewModel
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.StudentViewModel.#ctor(RGSWeb.Models.ApplicationUser,RGSWeb.Models.Class,RGSWeb.Managers.GradeManager)">
            <summary>
            Creates a StudentViewModel for an ApplicationUser
            </summary>
            <param name="user">ApplicationUser to construct view-model from</param>
            <param name="class">Class to calculate the students in</param>
            <param name="manager">Grademanager to calculate student's grade</param>
        </member>
        <member name="T:RGSWeb.ViewModels.AnnouncementViewModel">
            <summary>
            View-model to represent an announcement
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.AnnouncementViewModel.Id">
            <summary>
            Id of the announcment
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.AnnouncementViewModel.Title">
            <summary>
            Title of the announcement
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.AnnouncementViewModel.Description">
            <summary>
            Description of the announcement
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.AnnouncementViewModel.CreatedOn">
            <summary>
            Creation time of the assignment
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.AnnouncementViewModel.Class">
            <summary>
            Class for which the announcement was created
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.AnnouncementViewModel.#ctor(RGSWeb.Models.Announcement)">
            <summary>
            Creates a view-model for the announcement
            </summary>
            <param name="announcement"></param>
        </member>
        <member name="T:RGSWeb.ViewModels.ClassViewModel">
            <summary>
            View-model to represent a class
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.Id">
            <summary>
            The id of the class
            </summary>
            <example>1s</example>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.Title">
            <summary>
            The title of the Class
            </summary>
            <example>Advanced Biology</example>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.Prefix">
            <summary>
            The short prefix for the class
            </summary>
            <example>BIO</example>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.CourseNumber">
            <summary>
            The course number
            </summary>
            <example>3375</example>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.Section">
            <summary>
            The section of the class
            </summary>
            <example>1</example>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.GradeDistribution">
            <summary>
            The distribution of grades for this class for the different types
            of work items
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.ClassViewModel.Teacher">
            <summary>
            The teacher who is going to teach this class
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.ClassViewModel.#ctor(RGSWeb.Models.Class)">
            <summary>
            Creates a ClassViewModel for the given class
            </summary>
            <param name="class">Class to create view-model for</param>
        </member>
        <member name="T:RGSWeb.ViewModels.WorkItemViewModel">
            <summary>
            View-model to represent a WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.Id">
            <summary>
            Id of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.Title">
            <summary>
            The title of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.Description">
            <summary>
            Description for the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.DueDate">
            <summary>
            Date and time at which the WorkItem is due
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.MaxPoints">
            <summary>
            Maximum points attainable for this WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.Type">
            <summary>
            The type of the WorkItem
            </summary>
            <example>Exam</example>
        </member>
        <member name="P:RGSWeb.ViewModels.WorkItemViewModel.Class">
            <summary>
            The Class to which the WorkItem belongs
            </summary>
        </member>
        <member name="M:RGSWeb.ViewModels.WorkItemViewModel.#ctor(RGSWeb.Models.WorkItem)">
            <summary>
            Creates a view-model for the given WorkItem
            </summary>
            <param name="workItem">Model after which the view-model is created</param>
        </member>
        <member name="T:RGSWeb.ViewModels.CreateWorkItemViewModel">
            <summary>
            A model whose details are used to create a WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.Title">
            <summary>
            The title of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.Description">
            <summary>
            A short description of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.DueDate">
            <summary>
            Date by which the WorkItem is due
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.MaxPoints">
            <summary>
            Maximum points assignable for this WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.ClassId">
            <summary>
            The id of the class to which the WorkItem should belong
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.CreateWorkItemViewModel.Type">
            <summary>
            The type of this WorkItem (e.g. Project, Exam...)
            </summary>
        </member>
        <member name="T:RGSWeb.ViewModels.UpdateWorkItemViewModel">
            <summary>
            A model whose detail are used to update a WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.Id">
            <summary>
            Id of the WorkItem that is being updated
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.Title">
            <summary>
            The title of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.Description">
            <summary>
            A short description of the WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.DueDate">
            <summary>
            Date by which the WorkItem is due
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.MaxPoints">
            <summary>
            Maximum points assignable for this WorkItem
            </summary>
        </member>
        <member name="P:RGSWeb.ViewModels.UpdateWorkItemViewModel.Type">
            <summary>
            The type of this WorkItem (e.g. Project, Exam...)
            </summary>
        </member>
    </members>
</doc>
